/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LogoutImport } from './routes/logout'
import { Route as LoginImport } from './routes/login'
import { Route as ProtectedImport } from './routes/_protected'
import { Route as IndexImport } from './routes/index'
import { Route as AuthCallbackImport } from './routes/auth/callback'
import { Route as ProtectedWaypointsImport } from './routes/_protected/waypoints'
import { Route as ProtectedVehiclesImport } from './routes/_protected/vehicles'
import { Route as ProtectedTreeclusterImport } from './routes/_protected/treecluster'
import { Route as ProtectedTeamImport } from './routes/_protected/team'
import { Route as ProtectedSettingsImport } from './routes/_protected/settings'
import { Route as ProtectedSensorsImport } from './routes/_protected/sensors'
import { Route as ProtectedProfileImport } from './routes/_protected/profile'
import { Route as ProtectedMapImport } from './routes/_protected/map'
import { Route as ProtectedInfoImport } from './routes/_protected/info'
import { Route as ProtectedDebugImport } from './routes/_protected/debug'
import { Route as ProtectedDashboardImport } from './routes/_protected/dashboard'
import { Route as ProtectedWaypointsIndexImport } from './routes/_protected/waypoints/index'
import { Route as ProtectedTreeclusterIndexImport } from './routes/_protected/treecluster/index'
import { Route as ProtectedSettingsIndexImport } from './routes/_protected/settings/index'
import { Route as ProtectedMapIndexImport } from './routes/_protected/map/index'
import { Route as ProtectedWaypointsNewImport } from './routes/_protected/waypoints/new'
import { Route as ProtectedTreeclusterFormularImport } from './routes/_protected/treecluster/_formular'
import { Route as ProtectedTreeclusterTreeclusterIdImport } from './routes/_protected/treecluster/$treeclusterId'
import { Route as ProtectedTreeFormularImport } from './routes/_protected/tree/_formular'
import { Route as ProtectedTreeTreeIdImport } from './routes/_protected/tree/$treeId'
import { Route as ProtectedSettingsImportImport } from './routes/_protected/settings/import'
import { Route as ProtectedTreeclusterTreeclusterIdIndexImport } from './routes/_protected/treecluster/$treeclusterId/index'
import { Route as ProtectedTreeclusterFormularNewImport } from './routes/_protected/treecluster/_formular/new'
import { Route as ProtectedTreeclusterFormularTreeclusterIdImport } from './routes/_protected/treecluster/_formular/$treeclusterId'
import { Route as ProtectedTreeFormularNewImport } from './routes/_protected/tree/_formular/new'
import { Route as ProtectedTreeFormularTreeIdImport } from './routes/_protected/tree/_formular/$treeId'
import { Route as ProtectedMapTreeNewImport } from './routes/_protected/map/tree/new'
import { Route as ProtectedMapTreeEditImport } from './routes/_protected/map/tree/edit'
import { Route as ProtectedTreeclusterFormularTreeclusterIdEditImport } from './routes/_protected/treecluster/_formular/$treeclusterId.edit'
import { Route as ProtectedTreeclusterTreeclusterIdTreeTreeIdImport } from './routes/_protected/treecluster/$treeclusterId/tree/$treeId'
import { Route as ProtectedTreeFormularTreeIdEditImport } from './routes/_protected/tree/_formular/$treeId.edit'
import { Route as ProtectedMapTreeclusterSelectTreeImport } from './routes/_protected/map/treecluster/select.tree'

// Create Virtual Routes

const ProtectedTreeImport = createFileRoute('/_protected/tree')()

// Create/Update Routes

const LogoutRoute = LogoutImport.update({
  path: '/logout',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const ProtectedRoute = ProtectedImport.update({
  id: '/_protected',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ProtectedTreeRoute = ProtectedTreeImport.update({
  path: '/tree',
  getParentRoute: () => ProtectedRoute,
} as any)

const AuthCallbackRoute = AuthCallbackImport.update({
  path: '/auth/callback',
  getParentRoute: () => rootRoute,
} as any)

const ProtectedWaypointsRoute = ProtectedWaypointsImport.update({
  path: '/waypoints',
  getParentRoute: () => ProtectedRoute,
} as any)

const ProtectedVehiclesRoute = ProtectedVehiclesImport.update({
  path: '/vehicles',
  getParentRoute: () => ProtectedRoute,
} as any)

const ProtectedTreeclusterRoute = ProtectedTreeclusterImport.update({
  path: '/treecluster',
  getParentRoute: () => ProtectedRoute,
} as any)

const ProtectedTeamRoute = ProtectedTeamImport.update({
  path: '/team',
  getParentRoute: () => ProtectedRoute,
} as any)

const ProtectedSettingsRoute = ProtectedSettingsImport.update({
  path: '/settings',
  getParentRoute: () => ProtectedRoute,
} as any)

const ProtectedSensorsRoute = ProtectedSensorsImport.update({
  path: '/sensors',
  getParentRoute: () => ProtectedRoute,
} as any)

const ProtectedProfileRoute = ProtectedProfileImport.update({
  path: '/profile',
  getParentRoute: () => ProtectedRoute,
} as any)

const ProtectedMapRoute = ProtectedMapImport.update({
  path: '/map',
  getParentRoute: () => ProtectedRoute,
} as any)

const ProtectedInfoRoute = ProtectedInfoImport.update({
  path: '/info',
  getParentRoute: () => ProtectedRoute,
} as any)

const ProtectedDebugRoute = ProtectedDebugImport.update({
  path: '/debug',
  getParentRoute: () => ProtectedRoute,
} as any)

const ProtectedDashboardRoute = ProtectedDashboardImport.update({
  path: '/dashboard',
  getParentRoute: () => ProtectedRoute,
} as any)

const ProtectedWaypointsIndexRoute = ProtectedWaypointsIndexImport.update({
  path: '/',
  getParentRoute: () => ProtectedWaypointsRoute,
} as any)

const ProtectedTreeclusterIndexRoute = ProtectedTreeclusterIndexImport.update({
  path: '/',
  getParentRoute: () => ProtectedTreeclusterRoute,
} as any)

const ProtectedSettingsIndexRoute = ProtectedSettingsIndexImport.update({
  path: '/',
  getParentRoute: () => ProtectedSettingsRoute,
} as any)

const ProtectedMapIndexRoute = ProtectedMapIndexImport.update({
  path: '/',
  getParentRoute: () => ProtectedMapRoute,
} as any)

const ProtectedWaypointsNewRoute = ProtectedWaypointsNewImport.update({
  path: '/new',
  getParentRoute: () => ProtectedWaypointsRoute,
} as any)

const ProtectedTreeclusterFormularRoute =
  ProtectedTreeclusterFormularImport.update({
    id: '/_formular',
    getParentRoute: () => ProtectedTreeclusterRoute,
  } as any)

const ProtectedTreeclusterTreeclusterIdRoute =
  ProtectedTreeclusterTreeclusterIdImport.update({
    path: '/$treeclusterId',
    getParentRoute: () => ProtectedTreeclusterRoute,
  } as any)

const ProtectedTreeFormularRoute = ProtectedTreeFormularImport.update({
  id: '/_formular',
  getParentRoute: () => ProtectedTreeRoute,
} as any)

const ProtectedTreeTreeIdRoute = ProtectedTreeTreeIdImport.update({
  path: '/tree/$treeId',
  getParentRoute: () => ProtectedRoute,
} as any)

const ProtectedSettingsImportRoute = ProtectedSettingsImportImport.update({
  path: '/import',
  getParentRoute: () => ProtectedSettingsRoute,
} as any)

const ProtectedTreeclusterTreeclusterIdIndexRoute =
  ProtectedTreeclusterTreeclusterIdIndexImport.update({
    path: '/',
    getParentRoute: () => ProtectedTreeclusterTreeclusterIdRoute,
  } as any)

const ProtectedTreeclusterFormularNewRoute =
  ProtectedTreeclusterFormularNewImport.update({
    path: '/new',
    getParentRoute: () => ProtectedTreeclusterFormularRoute,
  } as any)

const ProtectedTreeclusterFormularTreeclusterIdRoute =
  ProtectedTreeclusterFormularTreeclusterIdImport.update({
    path: '/$treeclusterId',
    getParentRoute: () => ProtectedTreeclusterFormularRoute,
  } as any)

const ProtectedTreeFormularNewRoute = ProtectedTreeFormularNewImport.update({
  path: '/new',
  getParentRoute: () => ProtectedTreeFormularRoute,
} as any)

const ProtectedTreeFormularTreeIdRoute =
  ProtectedTreeFormularTreeIdImport.update({
    path: '/$treeId',
    getParentRoute: () => ProtectedTreeFormularRoute,
  } as any)

const ProtectedMapTreeNewRoute = ProtectedMapTreeNewImport.update({
  path: '/tree/new',
  getParentRoute: () => ProtectedMapRoute,
} as any)

const ProtectedMapTreeEditRoute = ProtectedMapTreeEditImport.update({
  path: '/tree/edit',
  getParentRoute: () => ProtectedMapRoute,
} as any)

const ProtectedTreeclusterFormularTreeclusterIdEditRoute =
  ProtectedTreeclusterFormularTreeclusterIdEditImport.update({
    path: '/edit',
    getParentRoute: () => ProtectedTreeclusterFormularTreeclusterIdRoute,
  } as any)

const ProtectedTreeclusterTreeclusterIdTreeTreeIdRoute =
  ProtectedTreeclusterTreeclusterIdTreeTreeIdImport.update({
    path: '/tree/$treeId',
    getParentRoute: () => ProtectedTreeclusterTreeclusterIdRoute,
  } as any)

const ProtectedTreeFormularTreeIdEditRoute =
  ProtectedTreeFormularTreeIdEditImport.update({
    path: '/edit',
    getParentRoute: () => ProtectedTreeFormularTreeIdRoute,
  } as any)

const ProtectedMapTreeclusterSelectTreeRoute =
  ProtectedMapTreeclusterSelectTreeImport.update({
    path: '/treecluster/select/tree',
    getParentRoute: () => ProtectedMapRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_protected': {
      id: '/_protected'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof ProtectedImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/logout': {
      id: '/logout'
      path: '/logout'
      fullPath: '/logout'
      preLoaderRoute: typeof LogoutImport
      parentRoute: typeof rootRoute
    }
    '/_protected/dashboard': {
      id: '/_protected/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof ProtectedDashboardImport
      parentRoute: typeof ProtectedImport
    }
    '/_protected/debug': {
      id: '/_protected/debug'
      path: '/debug'
      fullPath: '/debug'
      preLoaderRoute: typeof ProtectedDebugImport
      parentRoute: typeof ProtectedImport
    }
    '/_protected/info': {
      id: '/_protected/info'
      path: '/info'
      fullPath: '/info'
      preLoaderRoute: typeof ProtectedInfoImport
      parentRoute: typeof ProtectedImport
    }
    '/_protected/map': {
      id: '/_protected/map'
      path: '/map'
      fullPath: '/map'
      preLoaderRoute: typeof ProtectedMapImport
      parentRoute: typeof ProtectedImport
    }
    '/_protected/profile': {
      id: '/_protected/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProtectedProfileImport
      parentRoute: typeof ProtectedImport
    }
    '/_protected/sensors': {
      id: '/_protected/sensors'
      path: '/sensors'
      fullPath: '/sensors'
      preLoaderRoute: typeof ProtectedSensorsImport
      parentRoute: typeof ProtectedImport
    }
    '/_protected/settings': {
      id: '/_protected/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof ProtectedSettingsImport
      parentRoute: typeof ProtectedImport
    }
    '/_protected/team': {
      id: '/_protected/team'
      path: '/team'
      fullPath: '/team'
      preLoaderRoute: typeof ProtectedTeamImport
      parentRoute: typeof ProtectedImport
    }
    '/_protected/treecluster': {
      id: '/_protected/treecluster'
      path: '/treecluster'
      fullPath: '/treecluster'
      preLoaderRoute: typeof ProtectedTreeclusterImport
      parentRoute: typeof ProtectedImport
    }
    '/_protected/vehicles': {
      id: '/_protected/vehicles'
      path: '/vehicles'
      fullPath: '/vehicles'
      preLoaderRoute: typeof ProtectedVehiclesImport
      parentRoute: typeof ProtectedImport
    }
    '/_protected/waypoints': {
      id: '/_protected/waypoints'
      path: '/waypoints'
      fullPath: '/waypoints'
      preLoaderRoute: typeof ProtectedWaypointsImport
      parentRoute: typeof ProtectedImport
    }
    '/auth/callback': {
      id: '/auth/callback'
      path: '/auth/callback'
      fullPath: '/auth/callback'
      preLoaderRoute: typeof AuthCallbackImport
      parentRoute: typeof rootRoute
    }
    '/_protected/settings/import': {
      id: '/_protected/settings/import'
      path: '/import'
      fullPath: '/settings/import'
      preLoaderRoute: typeof ProtectedSettingsImportImport
      parentRoute: typeof ProtectedSettingsImport
    }
    '/_protected/tree/$treeId': {
      id: '/_protected/tree/$treeId'
      path: '/tree/$treeId'
      fullPath: '/tree/$treeId'
      preLoaderRoute: typeof ProtectedTreeTreeIdImport
      parentRoute: typeof ProtectedImport
    }
    '/_protected/tree': {
      id: '/_protected/tree'
      path: '/tree'
      fullPath: '/tree'
      preLoaderRoute: typeof ProtectedTreeImport
      parentRoute: typeof ProtectedImport
    }
    '/_protected/tree/_formular': {
      id: '/_protected/tree/_formular'
      path: '/tree'
      fullPath: '/tree'
      preLoaderRoute: typeof ProtectedTreeFormularImport
      parentRoute: typeof ProtectedTreeRoute
    }
    '/_protected/treecluster/$treeclusterId': {
      id: '/_protected/treecluster/$treeclusterId'
      path: '/$treeclusterId'
      fullPath: '/treecluster/$treeclusterId'
      preLoaderRoute: typeof ProtectedTreeclusterTreeclusterIdImport
      parentRoute: typeof ProtectedTreeclusterImport
    }
    '/_protected/treecluster/_formular': {
      id: '/_protected/treecluster/_formular'
      path: ''
      fullPath: '/treecluster'
      preLoaderRoute: typeof ProtectedTreeclusterFormularImport
      parentRoute: typeof ProtectedTreeclusterImport
    }
    '/_protected/waypoints/new': {
      id: '/_protected/waypoints/new'
      path: '/new'
      fullPath: '/waypoints/new'
      preLoaderRoute: typeof ProtectedWaypointsNewImport
      parentRoute: typeof ProtectedWaypointsImport
    }
    '/_protected/map/': {
      id: '/_protected/map/'
      path: '/'
      fullPath: '/map/'
      preLoaderRoute: typeof ProtectedMapIndexImport
      parentRoute: typeof ProtectedMapImport
    }
    '/_protected/settings/': {
      id: '/_protected/settings/'
      path: '/'
      fullPath: '/settings/'
      preLoaderRoute: typeof ProtectedSettingsIndexImport
      parentRoute: typeof ProtectedSettingsImport
    }
    '/_protected/treecluster/': {
      id: '/_protected/treecluster/'
      path: '/'
      fullPath: '/treecluster/'
      preLoaderRoute: typeof ProtectedTreeclusterIndexImport
      parentRoute: typeof ProtectedTreeclusterImport
    }
    '/_protected/waypoints/': {
      id: '/_protected/waypoints/'
      path: '/'
      fullPath: '/waypoints/'
      preLoaderRoute: typeof ProtectedWaypointsIndexImport
      parentRoute: typeof ProtectedWaypointsImport
    }
    '/_protected/map/tree/edit': {
      id: '/_protected/map/tree/edit'
      path: '/tree/edit'
      fullPath: '/map/tree/edit'
      preLoaderRoute: typeof ProtectedMapTreeEditImport
      parentRoute: typeof ProtectedMapImport
    }
    '/_protected/map/tree/new': {
      id: '/_protected/map/tree/new'
      path: '/tree/new'
      fullPath: '/map/tree/new'
      preLoaderRoute: typeof ProtectedMapTreeNewImport
      parentRoute: typeof ProtectedMapImport
    }
    '/_protected/tree/_formular/$treeId': {
      id: '/_protected/tree/_formular/$treeId'
      path: '/$treeId'
      fullPath: '/tree/$treeId'
      preLoaderRoute: typeof ProtectedTreeFormularTreeIdImport
      parentRoute: typeof ProtectedTreeFormularImport
    }
    '/_protected/tree/_formular/new': {
      id: '/_protected/tree/_formular/new'
      path: '/new'
      fullPath: '/tree/new'
      preLoaderRoute: typeof ProtectedTreeFormularNewImport
      parentRoute: typeof ProtectedTreeFormularImport
    }
    '/_protected/treecluster/_formular/$treeclusterId': {
      id: '/_protected/treecluster/_formular/$treeclusterId'
      path: '/$treeclusterId'
      fullPath: '/treecluster/$treeclusterId'
      preLoaderRoute: typeof ProtectedTreeclusterFormularTreeclusterIdImport
      parentRoute: typeof ProtectedTreeclusterFormularImport
    }
    '/_protected/treecluster/_formular/new': {
      id: '/_protected/treecluster/_formular/new'
      path: '/new'
      fullPath: '/treecluster/new'
      preLoaderRoute: typeof ProtectedTreeclusterFormularNewImport
      parentRoute: typeof ProtectedTreeclusterFormularImport
    }
    '/_protected/treecluster/$treeclusterId/': {
      id: '/_protected/treecluster/$treeclusterId/'
      path: '/'
      fullPath: '/treecluster/$treeclusterId/'
      preLoaderRoute: typeof ProtectedTreeclusterTreeclusterIdIndexImport
      parentRoute: typeof ProtectedTreeclusterTreeclusterIdImport
    }
    '/_protected/map/treecluster/select/tree': {
      id: '/_protected/map/treecluster/select/tree'
      path: '/treecluster/select/tree'
      fullPath: '/map/treecluster/select/tree'
      preLoaderRoute: typeof ProtectedMapTreeclusterSelectTreeImport
      parentRoute: typeof ProtectedMapImport
    }
    '/_protected/tree/_formular/$treeId/edit': {
      id: '/_protected/tree/_formular/$treeId/edit'
      path: '/edit'
      fullPath: '/tree/$treeId/edit'
      preLoaderRoute: typeof ProtectedTreeFormularTreeIdEditImport
      parentRoute: typeof ProtectedTreeFormularTreeIdImport
    }
    '/_protected/treecluster/$treeclusterId/tree/$treeId': {
      id: '/_protected/treecluster/$treeclusterId/tree/$treeId'
      path: '/tree/$treeId'
      fullPath: '/treecluster/$treeclusterId/tree/$treeId'
      preLoaderRoute: typeof ProtectedTreeclusterTreeclusterIdTreeTreeIdImport
      parentRoute: typeof ProtectedTreeclusterTreeclusterIdImport
    }
    '/_protected/treecluster/_formular/$treeclusterId/edit': {
      id: '/_protected/treecluster/_formular/$treeclusterId/edit'
      path: '/edit'
      fullPath: '/treecluster/$treeclusterId/edit'
      preLoaderRoute: typeof ProtectedTreeclusterFormularTreeclusterIdEditImport
      parentRoute: typeof ProtectedTreeclusterFormularTreeclusterIdImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  ProtectedRoute: ProtectedRoute.addChildren({
    ProtectedDashboardRoute,
    ProtectedDebugRoute,
    ProtectedInfoRoute,
    ProtectedMapRoute: ProtectedMapRoute.addChildren({
      ProtectedMapIndexRoute,
      ProtectedMapTreeEditRoute,
      ProtectedMapTreeNewRoute,
      ProtectedMapTreeclusterSelectTreeRoute,
    }),
    ProtectedProfileRoute,
    ProtectedSensorsRoute,
    ProtectedSettingsRoute: ProtectedSettingsRoute.addChildren({
      ProtectedSettingsImportRoute,
      ProtectedSettingsIndexRoute,
    }),
    ProtectedTeamRoute,
    ProtectedTreeclusterRoute: ProtectedTreeclusterRoute.addChildren({
      ProtectedTreeclusterTreeclusterIdRoute:
        ProtectedTreeclusterTreeclusterIdRoute.addChildren({
          ProtectedTreeclusterTreeclusterIdIndexRoute,
          ProtectedTreeclusterTreeclusterIdTreeTreeIdRoute,
        }),
      ProtectedTreeclusterFormularRoute:
        ProtectedTreeclusterFormularRoute.addChildren({
          ProtectedTreeclusterFormularTreeclusterIdRoute:
            ProtectedTreeclusterFormularTreeclusterIdRoute.addChildren({
              ProtectedTreeclusterFormularTreeclusterIdEditRoute,
            }),
          ProtectedTreeclusterFormularNewRoute,
        }),
      ProtectedTreeclusterIndexRoute,
    }),
    ProtectedVehiclesRoute,
    ProtectedWaypointsRoute: ProtectedWaypointsRoute.addChildren({
      ProtectedWaypointsNewRoute,
      ProtectedWaypointsIndexRoute,
    }),
    ProtectedTreeTreeIdRoute,
    ProtectedTreeRoute: ProtectedTreeRoute.addChildren({
      ProtectedTreeFormularRoute: ProtectedTreeFormularRoute.addChildren({
        ProtectedTreeFormularTreeIdRoute:
          ProtectedTreeFormularTreeIdRoute.addChildren({
            ProtectedTreeFormularTreeIdEditRoute,
          }),
        ProtectedTreeFormularNewRoute,
      }),
    }),
  }),
  LoginRoute,
  LogoutRoute,
  AuthCallbackRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_protected",
        "/login",
        "/logout",
        "/auth/callback"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_protected": {
      "filePath": "_protected.tsx",
      "children": [
        "/_protected/dashboard",
        "/_protected/debug",
        "/_protected/info",
        "/_protected/map",
        "/_protected/profile",
        "/_protected/sensors",
        "/_protected/settings",
        "/_protected/team",
        "/_protected/treecluster",
        "/_protected/vehicles",
        "/_protected/waypoints",
        "/_protected/tree/$treeId",
        "/_protected/tree"
      ]
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/logout": {
      "filePath": "logout.tsx"
    },
    "/_protected/dashboard": {
      "filePath": "_protected/dashboard.tsx",
      "parent": "/_protected"
    },
    "/_protected/debug": {
      "filePath": "_protected/debug.tsx",
      "parent": "/_protected"
    },
    "/_protected/info": {
      "filePath": "_protected/info.tsx",
      "parent": "/_protected"
    },
    "/_protected/map": {
      "filePath": "_protected/map.tsx",
      "parent": "/_protected",
      "children": [
        "/_protected/map/",
        "/_protected/map/tree/edit",
        "/_protected/map/tree/new",
        "/_protected/map/treecluster/select/tree"
      ]
    },
    "/_protected/profile": {
      "filePath": "_protected/profile.tsx",
      "parent": "/_protected"
    },
    "/_protected/sensors": {
      "filePath": "_protected/sensors.tsx",
      "parent": "/_protected"
    },
    "/_protected/settings": {
      "filePath": "_protected/settings.tsx",
      "parent": "/_protected",
      "children": [
        "/_protected/settings/import",
        "/_protected/settings/"
      ]
    },
    "/_protected/team": {
      "filePath": "_protected/team.tsx",
      "parent": "/_protected"
    },
    "/_protected/treecluster": {
      "filePath": "_protected/treecluster.tsx",
      "parent": "/_protected",
      "children": [
        "/_protected/treecluster/$treeclusterId",
        "/_protected/treecluster/_formular",
        "/_protected/treecluster/"
      ]
    },
    "/_protected/vehicles": {
      "filePath": "_protected/vehicles.tsx",
      "parent": "/_protected"
    },
    "/_protected/waypoints": {
      "filePath": "_protected/waypoints.tsx",
      "parent": "/_protected",
      "children": [
        "/_protected/waypoints/new",
        "/_protected/waypoints/"
      ]
    },
    "/auth/callback": {
      "filePath": "auth/callback.tsx"
    },
    "/_protected/settings/import": {
      "filePath": "_protected/settings/import.tsx",
      "parent": "/_protected/settings"
    },
    "/_protected/tree/$treeId": {
      "filePath": "_protected/tree/$treeId.tsx",
      "parent": "/_protected"
    },
    "/_protected/tree": {
      "filePath": "_protected/tree",
      "parent": "/_protected",
      "children": [
        "/_protected/tree/_formular"
      ]
    },
    "/_protected/tree/_formular": {
      "filePath": "_protected/tree/_formular.tsx",
      "parent": "/_protected/tree",
      "children": [
        "/_protected/tree/_formular/$treeId",
        "/_protected/tree/_formular/new"
      ]
    },
    "/_protected/treecluster/$treeclusterId": {
      "filePath": "_protected/treecluster/$treeclusterId.tsx",
      "parent": "/_protected/treecluster",
      "children": [
        "/_protected/treecluster/$treeclusterId/",
        "/_protected/treecluster/$treeclusterId/tree/$treeId"
      ]
    },
    "/_protected/treecluster/_formular": {
      "filePath": "_protected/treecluster/_formular.tsx",
      "parent": "/_protected/treecluster",
      "children": [
        "/_protected/treecluster/_formular/$treeclusterId",
        "/_protected/treecluster/_formular/new"
      ]
    },
    "/_protected/waypoints/new": {
      "filePath": "_protected/waypoints/new.tsx",
      "parent": "/_protected/waypoints"
    },
    "/_protected/map/": {
      "filePath": "_protected/map/index.tsx",
      "parent": "/_protected/map"
    },
    "/_protected/settings/": {
      "filePath": "_protected/settings/index.tsx",
      "parent": "/_protected/settings"
    },
    "/_protected/treecluster/": {
      "filePath": "_protected/treecluster/index.tsx",
      "parent": "/_protected/treecluster"
    },
    "/_protected/waypoints/": {
      "filePath": "_protected/waypoints/index.tsx",
      "parent": "/_protected/waypoints"
    },
    "/_protected/map/tree/edit": {
      "filePath": "_protected/map/tree/edit.tsx",
      "parent": "/_protected/map"
    },
    "/_protected/map/tree/new": {
      "filePath": "_protected/map/tree/new.tsx",
      "parent": "/_protected/map"
    },
    "/_protected/tree/_formular/$treeId": {
      "filePath": "_protected/tree/_formular/$treeId.tsx",
      "parent": "/_protected/tree/_formular",
      "children": [
        "/_protected/tree/_formular/$treeId/edit"
      ]
    },
    "/_protected/tree/_formular/new": {
      "filePath": "_protected/tree/_formular/new.tsx",
      "parent": "/_protected/tree/_formular"
    },
    "/_protected/treecluster/_formular/$treeclusterId": {
      "filePath": "_protected/treecluster/_formular/$treeclusterId.tsx",
      "parent": "/_protected/treecluster/_formular",
      "children": [
        "/_protected/treecluster/_formular/$treeclusterId/edit"
      ]
    },
    "/_protected/treecluster/_formular/new": {
      "filePath": "_protected/treecluster/_formular/new.tsx",
      "parent": "/_protected/treecluster/_formular"
    },
    "/_protected/treecluster/$treeclusterId/": {
      "filePath": "_protected/treecluster/$treeclusterId/index.tsx",
      "parent": "/_protected/treecluster/$treeclusterId"
    },
    "/_protected/map/treecluster/select/tree": {
      "filePath": "_protected/map/treecluster/select.tree.tsx",
      "parent": "/_protected/map"
    },
    "/_protected/tree/_formular/$treeId/edit": {
      "filePath": "_protected/tree/_formular/$treeId.edit.tsx",
      "parent": "/_protected/tree/_formular/$treeId"
    },
    "/_protected/treecluster/$treeclusterId/tree/$treeId": {
      "filePath": "_protected/treecluster/$treeclusterId/tree/$treeId.tsx",
      "parent": "/_protected/treecluster/$treeclusterId"
    },
    "/_protected/treecluster/_formular/$treeclusterId/edit": {
      "filePath": "_protected/treecluster/_formular/$treeclusterId.edit.tsx",
      "parent": "/_protected/treecluster/_formular/$treeclusterId"
    }
  }
}
ROUTE_MANIFEST_END */
